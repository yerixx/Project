{
  "personalProjectData": [
    {
      "id": 1,
      "title": "흑백요리사",
      "desc": "넷플릭스 흑백요리사에 출연한 셰프들의 레스토랑 위치를 한눈에 볼 수 있는 지도 서비스입니다. \n사용자의 위치를 기반으로 가까운 레스토랑을 찾거나, 지역별로 필터링하여 원하는 셰프의 레스토랑을 쉽게 찾을 수 있습니다.",
      "about": {
        "duration": "12",
        "intro": "Kakao Maps API를 활용하여 셰프들의 레스토랑 위치 정보를 시각화하고, 사용자 친화적인 인터페이스를 통해 쉽게 정보를 탐색할 수 있도록 구현했습니다.",
        "keyFeatures": "• 지역별 필터링 기능으로 원하는 지역의 레스토랑만 선택적으로 확인 가능\n• 현재 위치 기반 근처 레스토랑 탐색 기능\n• 마커 클릭 시 카카오맵 상세 페이지로 연결\n• 리스트 뷰와 지도 뷰의 연동으로 편리한 정보 탐색\n• 반응형 디자인으로 모바일 환경 지원",
        "impact": "• Kakao Maps API를 활용한 실시간 위치 기반 서비스 구현\n• TypeScript를 도입하여 타입 안정성 확보\n• Styled-Components를 활용한 모듈화된 스타일링\n• 사용자 경험을 고려한 직관적인 UI/UX 설계"
      },
      "mainImg": "/img/culinaryclasswar1.png",
      "stack": "(TypeScript)",
      "projectDetails": {
        "teamOrIndividual": "Personal",
        "responsive": "반응형",
        "projectType": "Custom",
        "apiUsage": "Kakao Maps API"
      },
      "frontend": {
        "html": null,
        "styling": "Styled-Components",
        "javascript": "TypeScript",
        "framework": "React",
        "libraries": "react-icons",
        "stateManagement": "useState",
        "apiIntegration": "Kakao Maps API"
      },
      "backend": {
        "language": null,
        "framework": null,
        "database": null,
        "authentication": null
      },
      "devTools": {
        "buildTool": "Vite",
        "packageManager": "npm",
        "versionControl": "Git"
      },
      "cloud": {
        "hosting": "Vercel"
      },
      "link": {
        "deploy": "https://culinary-class-war.netlify.app/",
        "github": "https://github.com/yerixx/culinary-class-war.git"
      },
      "modalMainImg": "/img/culinaryclasswar.mp4",
      "keyTechs": {
        "keyTechA": {
          "mp4": "/img/culinaryclasswar2.mp4",
          "title": "Information List",
          "desc": "흑수저와 백수저 관련 정보를 확인하고, 검색 기능을 통해 원하는 내용을 찾을 수 있으며, map 아이콘 클릭 시 카카오 지도 홈페이지로 이동할 수 있습니다."
        },
        "keyTechB": {
          "mp4": "/img/culinaryclasswar3.mp4",
          "title": "Location-based restaurant search",
          "desc": "• 지역 선택 시 해당 지역의 레스토랑만 필터링되어 표시됩니다.\n• 리스트에서 레스토랑 선택 시 해당 위치로 지도가 이동됩니다. \n• 마커 클릭 시 카카오맵 지도 홈페이지로 이동합니다. \n• 우측 상단의 아이콘을 클릭하여 사용자의 현재 위치를 확인하고, 사용자 주변의 레스토랑을 쉽게 찾을 수 있습니다. "
        },
        "keyTechC": {
          "mp4": "/img/culinaryclasswar4.mp4",
          "title": "Media Query",
          "desc": " 스마트폰, 태블릿, 데스크탑 등 다양한 화면 크기에 맞춰 콘텐츠의 크기, 배치, 글꼴 크기 등이 동적으로 변하도록 CSS 미디어 쿼리를 사용하여 화면 크기에 맞게 사이트 레이아웃이 조정되도록 구현했습니다.  "
        }
      },
      "highlights": {
        "img": "/img/culinaryclasswar5.png"
      }
    },
    {
      "id": 2,
      "title": "Todo List",
      "desc": "React 기반의 투두 리스트 애플리케이션에서 할 일을 관리하기 위한 핵심 기능을 제공합니다. \n사용자는 작업 추가, 완료 여부 전환, 수정 및 삭제를 포함한 모든 작업을 간단하고 직관적으로 수행할 수 있습니다. \n 또한, 작업의 진행 상태에 따라 필터링된 뷰를 제공하여 효율적인 작업 관리를 지원합니다.",
      "about": {
        "duration": "4",
        "intro": "React 기반의 투두 리스트 애플리케이션에서 할 일을 관리하기 위한 핵심 기능을 제공합니다. \n사용자는 작업 추가, 완료 여부 전환, 수정 및 삭제를 포함한 작업을 간단하고 직관적으로 수행할 수 있습니다. \n또한, 작업의 진행 상태에 따라 필터링된 뷰를 제공하여 효율적인 작업 관리를 지원합니다.",
        "keyFeatures": "• TodoContext를 사용하여 전역 상태를 관리하며, 작업의 추가, 수정, 삭제 및 완료 여부를 전환하는 기능을 제공합니다 .\n• 작업 제목을 더블 클릭하면 인라인 편집이 가능하며, 수정 후 자동 저장 기능(onBlur)을 통해 사용자 경험을 개선합니다.\n• Enter 키 입력으로도 편집 내용을 저장할 수 있어 키보드 중심의 작업 흐름을 지원합니다.\n• 작업 상태(완료 여부)에 따라 배경색과 텍스트 스타일을 동적으로 변경해 가독성을 높였습니다\n• 색상 배열을 반전시켜 다양한 작업 목록을 효과적으로 구분합니다.\n• 선택된 탭(selectedTab)에 따라 완료된 작업과 미완료 작업을 분리하여 보여줍니다.",
        "impact": "• 직관적인 UI와 다양한 편집 옵션을 통해 작업 관리의 효율성을 높이고, 사용자의 집중력과 생산성을 지원합니다.\n• 작업 상태에 따른 시각적 구분과 인라인 편집 기능을 제공함으로써 사용자 만족도를 높였습니다. \n• Context API 기반으로 설계되어 상태 관리의 일관성을 유지하며, 향후 기능 확장이 용이합니다."
      },
      "mainImg": "/img/todolist1.png",
      "stack": "(React)",
      "projectDetails": {
        "teamOrIndividual": "Personal",
        "responsive": "반응형",
        "projectType": "Custom",
        "apiUsage": null
      },
      "frontend": {
        "html": null,
        "styling": "Styled-Components",
        "javascript": null,
        "framework": "React",
        "libraries": "motion",
        "stateManagement": "useReducer",
        "apiIntegration": null
      },
      "backend": {
        "language": null,
        "framework": null,
        "database": "Firebase Firestore",
        "authentication": null
      },
      "devTools": {
        "buildTool": "React-Scripts",
        "packageManager": "npm",
        "versionControl": "Git"
      },
      "cloud": {
        "hosting": "Firebase"
      },
      "link": {
        "deploy": "https://todolist-aac99.web.app/",
        "github": "https://github.com/yerixx/todolist.git"
      },
      "modalMainImg": "/img/todolist1.png",
      "keyTechs": {
        "keyTechA": {
          "mp4": "/img/todolist2.mp4",
          "title": "Task Add & Edit",
          "desc": "새로운 작업을 추가하고, 작업 제목을 더블 클릭하여 인라인 편집을 통해 제목을 수정할 수 있습니다. 수정은 Enter 키나 포커스 아웃을 통해 저장됩니다."
        },
        "keyTechB": {
          "mp4": "/img/todolist3.mp4",
          "title": "Complete, Cancel & Delete",
          "desc": "각 작업에는 완료, 취소, 삭제 기능이 포함되어 있어 작업의 진행 상태를 쉽게 변경하고 불필요한 작업을 삭제할 수 있습니다."
        },
        "keyTechC": {
          "mp4": "/img/todolist4.mp4",
          "title": "Media Query",
          "desc": " 스마트폰, 태블릿, 데스크탑 등 다양한 화면 크기에 맞춰 콘텐츠의 크기, 배치, 글꼴 크기 등이 동적으로 변하도록 CSS 미디어 쿼리를 사용하여 화면 크기에 맞게 사이트 레이아웃이 조정되도록 구현했습니다.  "
        }
      },
      "highlights": {
        "img": "/img/todolist5.png"
      }
    },
    {
      "id": 3,
      "title": "Cyworld",
      "desc": "2000년대 초반 당시 사용자들이 일상과 추억을 기록하며 관계를 유지하는 데 큰 역할을 했던 소셜 네트워크 서비스인 싸이월드의 레트로 감성을 현대적인 웹 기술과 접목해, 사용자가 과거의 따뜻한 추억을 새롭게 경험하게 하고자 만들었습니다",
      "about": {
        "duration": "7",
        "intro": "사용자가 직접 디자인할 수 있는 미니홈피를 통해 감성을 공유하고 개성을 표현할 수 있는 공간을 제공합니다. \n사용자는 하루의 감정을 기록하거나, 자신의 프로필 메시지와 홈피 제목을 즉시 편집하며 커스터마이징할 수 있습니다. \n또한, 간단한 내비게이션으로 홈, 게임, 쥬크박스를 탐색하며 콘텐츠를 즐길 수 있습니다. \n이 모든 경험은 HTML, CSS, JavaScript로 구현되어 직관적이고 레트로한 인터페이스를 제공합니다.",
        "keyFeatures": "• 프로필 사진과 메시지를 커스터마이징 할 수 있습니다\n• 실시간 수정 기능을 통해 즉각적인 변화를 적용할 수 있습니다. \n• 제목 편집 인터페이스를 제공하며, 저장 및 취소 버튼으로 사용자 실수를 방지합니다. \n• ifreme 기능을 활용해 홈, 게임, 쥬크박스 등 세 가지 주요 화면을 간단한 클릭으로 전환할 수 있습니다. \n• 오늘의 기분을 기록하고 공유할 수 있는 감정 선택 기능이 제공됩니다. \n• 직관적인 인터페이스와 사용성을 고려한 인터랙션을 통해 높은 사용자 경험을 제공합니다.",
        "impact": "• 사용자에게 과거의 향수를 제공하며, 자신만의 디지털 공간을 소유하고 관리할 수 있는 즐거움을 선사합니다.\n • 파일 업로드, DOM 조작, 사용자 인터랙션 설계 등 실무적인 기술을 경험할 기회가 되었습니다. \n• 이 프로젝트는 단순한 클론 코딩을 넘어, 사용자와 개발자 모두에게 감성과 기술을 잇는 가치를 제공합니다."
      },
      "mainImg": "/img/cyworld1.png",
      "stack": "(Html/CSS)",
      "projectDetails": {
        "teamOrIndividual": "Personal",
        "responsive": "고정형",
        "projectType": "클론코딩",
        "apiUsage": "API"
      },
      "frontend": {
        "html": "HTML5",
        "styling": "SCSS",
        "javascript": "ES6+",
        "framework": null,
        "library": null,
        "stateManagement": null,
        "apiIntegration": null
      },
      "backend": {
        "language": null,
        "framework": null,
        "database": null,
        "authentication": null
      },
      "devTools": {
        "buildTool": "Webpack",
        "packageManager": null,
        "versionControl": "Git"
      },
      "cloud": {
        "hosting": "Netlify"
      },
      "link": {
        "deploy": "https://cyword.netlify.app/",
        "github": "https://github.com/yerixx/cyworld.git"
      },
      "modalMainImg": "/img/cyworld3.mp4",
      "keyTechs": {
        "keyTechA": {
          "mp4": null,
          "title": null,
          "desc": null
        },
        "keyTechB": {
          "mp4": null,
          "title": null,
          "desc": null
        },
        "keyTechC": {
          "mp4": null,
          "title": null,
          "desc": null
        }
      },
      "highlights": {
        "img": "/img/cyworld5.png"
      }
    },
    {
      "id": 4,
      "title": "OLED ART +",
      "desc": "디지털 아트와 인터랙티브 아트 관련 정보를 제공하는 클론코딩 웹사이트로, 반응형 디자인과 다양한 사용자 경험 기능을 구현하였습니다. \nGoogle 번역 API를 통해 다국어 지원이 가능하며, Slick Slider와 스크롤 애니메이션으로 직관적이고 생동감 있는 인터페이스를 제공합니다.",
      "about": {
        "duration": "7",
        "intro": "웹사이트의 구조와 기능을 구현한 클론코딩 프로젝트입니다. OLED ART +는 사용자 친화적인 반응형 웹사이트로, \n디지털 아트를 쉽게 탐색하고 예술가와 작품을 소개하며, Google Translate API를 활용해 글로벌 사용자를 지원합니다.",
        "keyFeatures": "• 직관적인 네비게이션과 인터랙티브 콘텐츠는 사용자가 쉽고 빠르게 정보를 찾을 수 있도록 돕습니다. \n• 작품과 예술가에 대한 상세한 정보 제공을 통해 문화적 깊이를 더해줍니다 \n• 다국어 번역 지원을 통해 글로벌 사용자가 편리하게 접근할 수 있도록 합니다. \n• 실시간 업데이트와 슬라이더를 활용한 동적인 UI/UX는 사용자에게 생동감 넘치는 경험을 선사합니다.",
        "impact": "OLED ART +는 예술을 보다 친근하게 만들고, \n디지털 아트 생태계를 확장함으로써 예술가와 사용자를 연결하는 가교 역할을 합니다."
      },
      "mainImg": "/img/oeldart.png",
      "stack": "(Html/CSS)",
      "projectDetails": {
        "teamOrIndividual": "Personal",
        "responsive": "반응형",
        "projectType": "클론코딩",
        "apiUsage": "API"
      },
      "frontend": {
        "html": "HTML5",
        "styling": "SCSS",
        "javascript": "ES6+",
        "framework": null,
        "library": null,
        "stateManagement": null,
        "apiIntegration": "Google Translate API"
      },
      "backend": {
        "language": null,
        "framework": null,
        "database": null,
        "authentication": null
      },
      "devTools": {
        "buildTool": "Webpack",
        "packageManager": null,
        "versionControl": "Git"
      },
      "cloud": {
        "hosting": "Netlify"
      },
      "link": {
        "deploy": "https://oledart.netlify.app/",
        "github": "https://github.com/yerixx/OLEDART.git"
      },
      "modalMainImg": "/img/oeldart.png",
      "keyTechs": {
        "keyTechA": {
          "mp4": "/img/oeldart2.mp4",
          "title": "Google Translate API",
          "desc": "Google Translate API를 통해 다양한 언어로 웹사이트 콘텐츠를 번역할 수 있는 기능.\n언어 선택 버튼을 클릭하면 언어 모달이 열리고, 사용자가 원하는 언어로 웹사이트를 변경할 수 있습니다."
        },
        "keyTechB": {
          "mp4": "/img/oeldart3.mp4",
          "title": "Slick Slider",
          "desc": "Slick Slider 라이브러리를 사용하여 아티스트와 작품 이미지 슬라이더 기능을 구현.\n반응형으로 동작하며, 화면 크기에 따라 슬라이드 항목 수가 달라지도록 설정했습니다."
        },
        "keyTechC": {
          "mp4": "/img/oeldart4.mp4",
          "title": "Media Query",
          "desc": " 스마트폰, 태블릿, 데스크탑 등 다양한 화면 크기에 맞춰 콘텐츠의 크기, 배치, 글꼴 크기 등이 동적으로 변하도록 CSS 미디어 쿼리를 사용하여 화면 크기에 맞게 사이트 레이아웃이 조정되도록 구현했습니다.  "
        }
      },
      "highlights": {
        "img": "/img/oeldart5.png"
      }
    }
  ]
}
